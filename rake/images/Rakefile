# frozen_string_literal: true

require 'rake'

cmd_images_packer = \
  'cd packer && ' \
  'packer build ' \
  "--var 'ansible_environment=%<pipeline>s' " \
  "--var 'ansible_playbook=%<playbook>s' " \
  "--var 'base_repo=%<base_repo>s' " \
  "--var 'base_user=%<base_user>s' " \
  "--var 'base_tag=latest' " \
  "--var 'local_user=%<local_user>s' " \
  "--var 'target_repo=%<target_repo>s' " \
  "--var 'target_tag=latest' " \
  'templates/docker/takelbase/project/build_from_prod.json'

template_begin = \
  'TAKELAGE_PROJECT_ENV=%<pipeline>s bash -c ' \
  "'cd ansible && molecule"
template_end = "--scenario-name image'"
cmd_images_molecule = {
  create: "#{template_begin} create #{template_end}",
  destroy: "#{template_begin} destroy #{template_end}",
  lint: "#{template_begin} lint #{template_end}",
  login: "#{template_begin} login #{template_end}",
  test: "#{template_begin} test #{template_end}",
  verify: "#{template_begin} verify #{template_end}"
}

cmd_images_docker_pull = 'docker pull ' \
  "#{@project['dockerhub_base_user']}/" \
  "#{@project['dockerhub_base_repo']}:" \
  'latest'

# rubocop:disable Metrics/BlockLength
namespace :images do
  desc 'Update docker base image'
  task :update do
    @commands << cmd_images_docker_pull
  end
  @project['images'].each do |image|
    imagename = image.first
    namespace imagename.to_sym do
      @project['pipelines'].each do |pipeline|
        namespace pipeline.to_sym do
          namespace :build_from do
            base_repo = @project['dockerhub_base_repo']
            base_user = @project['dockerhub_base_user']
            parent_layer = ''
            @project['images'][imagename]['layers'].each_with_index do |layer, index|
              unless index.zero?
                base_repo = "#{@project['name']}-#{parent_layer}"
                base_user = @project['local_user']
                parent_layer = layer
              end
              desc "Build image \"#{imagename}\" from layer \"#{layer}\""
              task "#{index.to_s.rjust(2, '0')}-#{layer}".to_sym do
                @commands << format(
                  cmd_images_packer,
                  pipeline: pipeline,
                  playbook: "playbook-#{layer}.yml",
                  base_repo: base_repo,
                  base_user: base_user,
                  local_user: @project['local_user'],
                  target_repo: "#{@project['name']}-#{pipeline}"
                )
              end
            end
          end
          cmd_images_molecule.each do |job, command|
            desc "#{job.capitalize} image \"#{imagename}\""
            task job.to_sym do
              @commands << format(
                command,
                pipeline: pipeline
              )
            end
          end
        end
      end
    end
  end
end
# rubocop:enable Metrics/BlockLength
