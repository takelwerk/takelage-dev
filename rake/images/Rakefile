# frozen_string_literal: true

require 'rake'

cmd_images_packer =
  'cd packer && ' \
  'packer build ' \
  "--var 'ansible_environment=%<pipeline>s' " \
  "--var 'ansible_playbook=%<playbook>s' " \
  "--var 'base_repo=%<base_repo>s' " \
  "--var 'base_user=%<base_user>s' " \
  "--var 'base_tag=latest' " \
  "--var 'local_user=%<local_user>s' " \
  "--var 'target_repo=%<target_repo>s' " \
  "--var 'target_tag=latest' " \
  'templates/docker/takelbase/project/build_from_prod.json'

cmd_images_molecule =
  'TAKELAGE_PROJECT_ENV=%<pipeline>s bash -c ' \
  "'cd ansible && molecule %<job>s --scenario-name image'"

jobs = \
  %i[converge
     destroy
     lint
     login
     test
     verify]

cmd_images_docker_pull = 'docker pull ' \
  "#{@project['dockerhub_base_user']}/" \
  "#{@project['dockerhub_base_repo']}:" \
  'latest'

# rubocop:disable Metrics/BlockLength
namespace :images do
  desc 'Update docker base image'
  task :update do
    @commands << cmd_images_docker_pull
  end

  @project['images'].each do |image|
    imagename = image.first
    namespace imagename.to_sym do |env|
      @project['pipelines'].each do |pipeline|
        desc "Show subtasks of #{env.scope.head}" if @overview
        task 'tasks'.to_sym => :details
        next if @overview

        namespace pipeline.to_sym do
          namespace :from do
            target_repo = "#{@project['name']}-#{imagename}-#{pipeline}"
            desc "Build from base layer image #{imagename}"
            task :'00-base' do
              @commands << format(
                cmd_images_packer,
                pipeline: pipeline,
                playbook: 'playbook-site.yml',
                base_repo: @project['dockerhub_base_repo'],
                base_user: @project['dockerhub_base_user'],
                local_user: @project['local_user'],
                target_repo: target_repo)
            end
            @project['images'][imagename]['layers'][..-2].each_with_index do |layer, index|
              number = index.next.to_s.rjust(2, '0')
              desc "Build from layer #{layer} image #{imagename}"
              task "#{number}-#{layer}".to_sym do
                @commands << format(
                  cmd_images_packer,
                  pipeline: pipeline,
                  playbook: "playbook-#{layer}.yml",
                  base_repo: "#{@project['name']}-#{imagename}-#{number}-#{layer}",
                  base_user: @project['local_user'],
                  local_user: @project['local_user'],
                  target_repo: target_repo)
              end
            end
          end

          namespace :next do
            parent_layer = ''
            @project['images'][imagename]['layers'][..-2].each_with_index do |layer, index|
              parent_number = index.to_s.rjust(2, '0')
              number = index.next.to_s.rjust(2, '0')
              if index.zero?
                base_repo = @project['dockerhub_base_repo']
                base_user = @project['dockerhub_base_user']
              else
                base_repo = "#{@project['name']}-#{imagename}-#{parent_number}-#{parent_layer}"
                base_user = @project['local_user']
              end
              parent_layer = layer
              desc "Build layer #{layer} from layer #{parent_layer} of image #{imagename}"
              task "#{number}-#{layer}".to_sym do
                @commands << format(
                  cmd_images_packer,
                  pipeline: pipeline,
                  playbook: "playbook-#{layer}.yml",
                  base_repo: base_repo,
                  base_user: base_user,
                  local_user: @project['local_user'],
                  target_repo: "#{@project['name']}-#{imagename}-#{number}-#{layer}")
              end
            end
          end

          namespace :to do
            @project['images'][imagename]['layers'][..-2].each_with_index do |layer, index|
              number = index.next.to_s.rjust(2, '0')
              dependencies = []
              @project['images'][imagename]['layers'][..-2].each_with_index do |sublayer, subindex|
                next if index < subindex

                subnumber = subindex.next.to_s.rjust(2, '0')
                dependencies << "images:#{imagename}:#{pipeline}:next:#{subnumber}-#{sublayer}".to_sym
              end
              desc "Build layers up to layer #{layer} from base layer of image #{imagename}"
              task "#{number}-#{layer}".to_sym => dependencies
            end
          end
        end

        # no pipeline as these jobs use the target image
        jobs.each do |job|
          desc "#{job.capitalize} image #{imagename}"
          task job.to_sym do
            @commands << format(
              cmd_images_molecule,
              job: job,
              pipeline: pipeline
            )
          end
        end
      end
    end
  end
end
# rubocop:enable Metrics/BlockLength
