---
name: Test arm64

on:
  workflow_dispatch:  # allow manual trigger

jobs:
  test-arm64:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Create randmac.py
        run: |
          cat << EOF > $HOME/randmac.py
          #!/usr/bin/env python3
          import random
          def randomMAC():
            return [ 0x00, 0x16, 0x3e,
            random.randint(0x00, 0x7f),
            random.randint(0x00, 0xff),
            random.randint(0x00, 0xff) ]
          def MACprettyprint(mac):
            return ':'.join(map(lambda x: "%02x" % x, mac))
          if __name__ == '__main__':
            print(MACprettyprint(randomMAC()))
          EOF

      - name: Create cloud init config
        run: |
          cat << EOF > $HOME/user-data
          #cloud-config
          password: ubuntu
          chpasswd: { expire: False }
          ssh_pwauth: True
          EOF

      - name: Create takelactions.sh
        run: |
          cat << EOF > $HOME/takelactions.sh
          ls -la
          EOF

      - name: Setup QEMU
        run: |
          sudo apt-get --yes install cloud-image-utils qemu-system-arm qemu-efi sshpass
          cloud-localds $HOME/user-data.img $HOME/user-data
          cp /usr/share/AAVMF/AAVMF_CODE.fd $HOME/flash1.img
          wget http://cloud-images.ubuntu.com/jammy/current/jammy-server-cloudimg-arm64.img -O $HOME/jammy-server-cloudimg-arm64.img
          export RANDMAC=$(python3 $HOME/randmac.py)
          sudo qemu-system-aarch64 -daemonize -display none -m 1024 -cpu cortex-a57 -M virt -pflash /usr/share/AAVMF/AAVMF_CODE.fd -pflash $HOME/flash1.img -drive if=none,file=$HOME/jammy-server-cloudimg-arm64.img,id=hd0 -drive file=$HOME/user-data.img,format=raw -device virtio-blk-device,drive=hd0 -netdev type=user,id=net0,hostfwd=tcp::2222-:22 -device virtio-net-device,netdev=net0,mac=$RANDMAC
          until sshpass -p ubuntu ssh -p 2222 -o StrictHostKeyChecking=accept-new ubuntu@localhost true;do  echo "Waiting for ssh..."; done

      - name: Run takelactions.sh
        run: |
          sshpass -p ubuntu scp -P 2222 -o StrictHostKeyChecking=accept-new $HOME/takelactions.sh ubuntu@localhost:
          sshpass -p ubuntu ssh -p 2222 -o StrictHostKeyChecking=accept-new ubuntu@localhost sh takelactions.sh

      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
